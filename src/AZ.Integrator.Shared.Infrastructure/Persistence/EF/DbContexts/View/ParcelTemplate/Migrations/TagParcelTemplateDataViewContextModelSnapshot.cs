// <auto-generated />

#nullable disable

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

namespace AZ.Integrator.Shared.Infrastructure.Persistence.EF.DbContexts.View.ParcelTemplate.Migrations
{
    [DbContext(typeof(TagParcelTemplateDataViewContext))]
    partial class TagParcelTemplateDataViewContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AZ.Integrator.Shared.Infrastructure.Persistence.EF.Configurations.View.ViewModels.TagParcelTemplateViewModel", b =>
                {
                    b.Property<string>("Tag")
                        .HasColumnType("text")
                        .HasColumnName("tag");

                    b.Property<string>("TenantId")
                        .HasColumnType("text")
                        .HasColumnName("tenant_id");

                    b.HasKey("Tag", "TenantId");

                    b.ToTable((string)null);

                    b.ToView("tag_parcel_templates_view", (string)null);
                });

            modelBuilder.Entity("AZ.Integrator.Shared.Infrastructure.Persistence.EF.Configurations.View.ViewModels.TagParcelViewModel", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<double>("Height")
                        .HasColumnType("double precision")
                        .HasColumnName("height");

                    b.Property<double>("Length")
                        .HasColumnType("double precision")
                        .HasColumnName("length");

                    b.Property<string>("Tag")
                        .HasColumnType("text")
                        .HasColumnName("tag");

                    b.Property<string>("TenantId")
                        .HasColumnType("text")
                        .HasColumnName("tenantId");

                    b.Property<double>("Weight")
                        .HasColumnType("double precision")
                        .HasColumnName("weight");

                    b.Property<double>("Width")
                        .HasColumnType("double precision")
                        .HasColumnName("width");

                    b.HasKey("Id");

                    b.HasIndex("Tag", "TenantId");

                    b.ToTable((string)null);

                    b.ToView("tag_parcels_view", (string)null);
                });

            modelBuilder.Entity("AZ.Integrator.Shared.Infrastructure.Persistence.EF.Configurations.View.ViewModels.TagParcelViewModel", b =>
                {
                    b.HasOne("AZ.Integrator.Shared.Infrastructure.Persistence.EF.Configurations.View.ViewModels.TagParcelTemplateViewModel", null)
                        .WithMany("Parcels")
                        .HasForeignKey("Tag", "TenantId");
                });

            modelBuilder.Entity("AZ.Integrator.Shared.Infrastructure.Persistence.EF.Configurations.View.ViewModels.TagParcelTemplateViewModel", b =>
                {
                    b.Navigation("Parcels");
                });
#pragma warning restore 612, 618
        }
    }
}
