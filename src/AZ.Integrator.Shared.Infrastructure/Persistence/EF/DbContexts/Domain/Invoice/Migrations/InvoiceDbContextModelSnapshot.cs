// <auto-generated />
using System;
using AZ.Integrator.Shared.Infrastructure.Persistence.EF.DbContexts.Domain.Invoice;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AZ.Integrator.Shared.Infrastructure.Persistence.EF.DbContexts.Domain.Invoice.Migrations
{
    [DbContext(typeof(InvoiceDbContext))]
    partial class InvoiceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AZ.Integrator.Invoices.Domain.Aggregates.Invoice.Invoice", b =>
                {
                    b.Property<int>("ExternalId")
                        .HasColumnType("integer")
                        .HasColumnName("external_id");

                    b.Property<string>("ExternalOrderNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("external_order_number");

                    b.Property<string>("Number")
                        .HasColumnType("text")
                        .HasColumnName("number");

                    b.HasKey("ExternalId");

                    b.ToTable("invoices", (string)null);
                });

            modelBuilder.Entity("AZ.Integrator.Invoices.Domain.Aggregates.Invoice.Invoice", b =>
                {
                    b.OwnsOne("AZ.Integrator.Domain.SharedKernel.ValueObjects.CreationInformation", "CreationInformation", b1 =>
                        {
                            b1.Property<int>("InvoiceExternalId")
                                .HasColumnType("integer");

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("timestamp without time zone")
                                .HasColumnName("created_at");

                            b1.Property<Guid>("CreatedBy")
                                .HasColumnType("uuid")
                                .HasColumnName("created_by");

                            b1.Property<string>("TenantId")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("tenant_id");

                            b1.HasKey("InvoiceExternalId");

                            b1.ToTable("invoices");

                            b1.WithOwner()
                                .HasForeignKey("InvoiceExternalId");
                        });

                    b.Navigation("CreationInformation")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
